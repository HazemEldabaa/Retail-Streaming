version: "2"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181" # Expose Zookeeper port to the host

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "29092:29092" # Expose Kafka port to the host
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181" # Update Zookeeper connection string
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092" # Update advertised listener
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT" # Update listener security protocol map
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: hazem
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: Delhaize_Sales
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: jaggaryussef@gmail.com
      PGADMIN_DEFAULT_PASSWORD: root

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    command: uvicorn src.app:app --host 0.0.0.0 --port 8080 --reload
    depends_on:
      - postgres
      - kafka
    environment:
      AZURE_SQL_SERVER: ${AZURE_SQL_SERVER}
      AZURE_SQL_DATABASE: ${AZURE_SQL_DATABASE}
      AZURE_SQL_USER: ${AZURE_SQL_USER}
      AZURE_SQL_PASSWORD: ${AZURE_SQL_PASSWORD}
    links:
      - "kafka" # Link FastAPI service to Kafka service
    volumes:
      - ./src:/retail_streaming/src
volumes:
  postgres_data:
    driver: local
